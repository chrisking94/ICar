C51 COMPILER V9.01   LCD1_8                                                                07/09/2017 16:14:44 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD1_8
OBJECT MODULE PLACED IN .\DebugRel\LCD1.8.obj
COMPILER INVOKED BY: H:\mpro\MCU\Keil\C51\BIN\C51.EXE LCD1.8.c OMF2 BROWSE DEBUG TABS(2) OBJECT(.\DebugRel\LCD1.8.obj)

line level    source

   1          #include "LCD1.8.h"
   2          
   3          #ifdef COMPILE_LCD18_
   4          
   5          sbit lcdRst=P1^3;
   6          sbit lcdCs=P1^2;
   7          sbit lcdAO=P1^4;//!Reg=0,Dat=1;
   8          
   9          u16 bgColor=YELLOW;//background color
  10          u16 pColor;//point color
  11          u16 fColor;//fill color
  12          
  13          u16 px=0,py=0;//画笔坐标
  14          
  15          bool beginFill=false;
  16          bool lineLess =false;
  17          
  18          void lcd18_writeByte(u8 da,bit mod)//!mod=LCD18_DAT或LCD18_REG
  19          {
  20   1        lcdAO=mod;
  21   1        SPISendByte(da);
  22   1      }
  23          
  24          void lcd18_writeInt16(u16 nDa,bit mod)
  25          {
  26   1        lcdAO=mod;
  27   1        SPISendByte(nDa>>8);
  28   1        SPISendByte(nDa);
  29   1      }
  30          
  31          void lcd18_setAddressRect(u16 x0,u16 y0,u16 x1,u16 y1)
  32          {
  33   1        lcd18_writeByte(0x2A,LCD18_REG);//列设置寄存器
  34   1        lcd18_writeInt16(x0,LCD18_DAT);
  35   1        lcd18_writeInt16(x1,LCD18_DAT);
  36   1        
  37   1        lcd18_writeByte(0x2B,LCD18_REG);//行设置寄存器
  38   1        lcd18_writeInt16(y0,LCD18_DAT);
  39   1        lcd18_writeInt16(y1,LCD18_DAT);
  40   1        
  41   1        lcd18_writeByte(0x2C,LCD18_REG);//内存写寄存器
  42   1      }
  43          
  44          void lcd18_init(void)
  45          {
  46   1        lcdLed=0;
  47   1        lcdCs=1;
  48   1        lcdRst=0;
  49   1        delayms(30);
  50   1        lcdRst=1;
  51   1        delayms(30);
  52   1        lcdCs=0;
  53   1        
  54   1        lcd18_writeByte(0x11,LCD18_REG);//sleep out
  55   1        delayms(120);
C51 COMPILER V9.01   LCD1_8                                                                07/09/2017 16:14:44 PAGE 2   

  56   1        
  57   1        //____________________ST7735S帧率设置________________________________//
  58   1        lcd18_writeByte(0xB1,LCD18_REG);//%正常模式（全彩）
  59   1        lcd18_writeByte(0x05,LCD18_DAT);//RTNA 设置一行的时间
  60   1        lcd18_writeByte(0x3C,LCD18_DAT);//FPA：前廊
  61   1        lcd18_writeByte(0x3C,LCD18_DAT);//BPA：后廊。PS：在前廊后廊时间内显示数据不从RAM刷新到屏幕
  62   1        
  63   1        lcd18_writeByte(0xB2,LCD18_REG);//%空闲(idle)模式（8色）
  64   1        lcd18_writeByte(0x05,LCD18_DAT);//RTNA 设置一行的时间
  65   1        lcd18_writeByte(0x3C,LCD18_DAT);//FPA：前廊
  66   1        lcd18_writeByte(0x3C,LCD18_DAT);//BPA：后廊
  67   1        
  68   1        lcd18_writeByte(0xB3,LCD18_REG);//%偏好(Partial)模式+全彩
  69   1        lcd18_writeByte(0x05,LCD18_DAT);//RTNA 设置一行的时间
  70   1        lcd18_writeByte(0x3C,LCD18_DAT);//FPA：前廊
  71   1        lcd18_writeByte(0x3C,LCD18_DAT);//BPA：后廊
  72   1        lcd18_writeByte(0x05,LCD18_DAT);//RTNA 设置一行的时间
  73   1        lcd18_writeByte(0x3C,LCD18_DAT);//FPA：前廊
  74   1        lcd18_writeByte(0x3C,LCD18_DAT);//BPA：后廊
  75   1        //__End__________________ST7735S帧率设置________________________________//
  76   1        
  77   1        //____________________ST7735S显示、电源设置________________________________//
  78   1        lcd18_writeByte(0xB4,LCD18_REG);//%显示反转控制
  79   1        lcd18_writeByte(0x03,LCD18_DAT);//NLA,NLB,NLC 设置反转
  80   1        
  81   1        lcd18_writeByte(0xC0,LCD18_REG);//%电源控制设置1
  82   1        lcd18_writeByte(0x28,LCD18_DAT);//AVDD,VRHP（Positive+)  VRHP：设置AVDD电压
  83   1        lcd18_writeByte(0x08,LCD18_DAT);//VRHN (-)
  84   1        lcd18_writeByte(0x04,LCD18_DAT);//MODE
  85   1        
  86   1        lcd18_writeByte(0xC1,LCD18_REG);//%电源控制设置2
  87   1        lcd18_writeByte(0xC0,LCD18_DAT);//设置VGH/VGL电压
  88   1        
  89   1        lcd18_writeByte(0xC2,LCD18_REG);//%电源控制设置3，正常模式（全彩）
  90   1        lcd18_writeByte(0x0D,LCD18_DAT);//DCA(2) SAPA(3) APA(3)  APA：调整可用的(operational)放大器(amplifier)
  91   1        lcd18_writeByte(0x00,LCD18_DAT);//DCA(8)
  92   1        
  93   1        lcd18_writeByte(0xC3,LCD18_REG);//%电源控制设置4，空闲模式（8色）
  94   1        lcd18_writeByte(0x8D,LCD18_DAT);//DCA(2) SAPA(3) APA(3)  APA：调整可用的(operational)放大器(amplifier)
  95   1        lcd18_writeByte(0x2A,LCD18_DAT);//DCA(8)
  96   1        
  97   1        lcd18_writeByte(0xC4,LCD18_REG);//%电源控制设置4，偏好模式+全彩
  98   1        lcd18_writeByte(0x8D,LCD18_DAT);//DCA(2) SAPA(3) APA(3)  APA：调整可用的(operational)放大器(amplifier)
  99   1        lcd18_writeByte(0xEE,LCD18_DAT);//DCA(8)
 100   1        //__End__________________ST7735S显示、电源设置________________________________//
 101   1        
 102   1        //____________________ST7735S VCOM设置________________________________//
 103   1        lcd18_writeByte(0xC5,LCD18_REG);//%显示反转控制
 104   1        lcd18_writeByte(0x1A,LCD18_DAT);//VCOM控制设置
 105   1        //__End__________________ST7735S VCOM设置________________________________//
 106   1        
 107   1        //____________________ST7735S 内存数据接口设置________________________________//
 108   1        lcd18_writeByte(0x36,LCD18_REG);//%内存数据接口控制
 109   1        lcd18_writeByte(0xC0,LCD18_DAT);//MX,MY,RGB模式
 110   1        //__End__________________ST7735S 内存数据接口设置________________________________//
 111   1        
 112   1        //____________________ST7735S Gamma设置________________________________//
 113   1        lcd18_writeByte(0xE0,LCD18_REG);//%Gamma调整，+极
 114   1        lcd18_writeByte(0x04,LCD18_DAT);
 115   1        lcd18_writeByte(0x22,LCD18_DAT);
 116   1        lcd18_writeByte(0x07,LCD18_DAT);
 117   1        lcd18_writeByte(0x0A,LCD18_DAT);
C51 COMPILER V9.01   LCD1_8                                                                07/09/2017 16:14:44 PAGE 3   

 118   1        lcd18_writeByte(0x2E,LCD18_DAT);
 119   1        lcd18_writeByte(0x30,LCD18_DAT);
 120   1        lcd18_writeByte(0x25,LCD18_DAT);
 121   1        lcd18_writeByte(0x2A,LCD18_DAT);
 122   1        lcd18_writeByte(0x28,LCD18_DAT);
 123   1        lcd18_writeByte(0x26,LCD18_DAT);
 124   1        lcd18_writeByte(0x2E,LCD18_DAT);
 125   1        lcd18_writeByte(0x3A,LCD18_DAT);
 126   1        lcd18_writeByte(0x00,LCD18_DAT);
 127   1        lcd18_writeByte(0x01,LCD18_DAT);
 128   1        lcd18_writeByte(0x03,LCD18_DAT);
 129   1        lcd18_writeByte(0x13,LCD18_DAT);
 130   1        
 131   1        lcd18_writeByte(0xE1,LCD18_REG);//%Gamma调整，-极
 132   1        lcd18_writeByte(0x04,LCD18_DAT);
 133   1        lcd18_writeByte(0x16,LCD18_DAT);
 134   1        lcd18_writeByte(0x06,LCD18_DAT);
 135   1        lcd18_writeByte(0x0D,LCD18_DAT);
 136   1        lcd18_writeByte(0x2D,LCD18_DAT);
 137   1        lcd18_writeByte(0x26,LCD18_DAT);
 138   1        lcd18_writeByte(0x23,LCD18_DAT);
 139   1        lcd18_writeByte(0x27,LCD18_DAT);
 140   1        lcd18_writeByte(0x27,LCD18_DAT);
 141   1        lcd18_writeByte(0x25,LCD18_DAT);
 142   1        lcd18_writeByte(0x2D,LCD18_DAT);
 143   1        lcd18_writeByte(0x3B,LCD18_DAT);
 144   1        lcd18_writeByte(0x00,LCD18_DAT);
 145   1        lcd18_writeByte(0x01,LCD18_DAT);
 146   1        lcd18_writeByte(0x04,LCD18_DAT);
 147   1        lcd18_writeByte(0x13,LCD18_DAT);
 148   1        //__End__________________ST7735S Gamma设置________________________________//
 149   1        
 150   1        //____________________其他设置________________________________//
 151   1        lcd18_writeByte(0x3A,LCD18_REG); //65k mode
 152   1        lcd18_writeByte(0x05,LCD18_DAT);
 153   1        lcd18_writeByte(0x29,LCD18_REG); //Display on
 154   1        //__End__________________其他设置________________________________//
 155   1      }
 156          
 157          void lcd18_cls(void)
 158          {
 159   1        u16 i,j;//大于255x255则需改为u16或u32等
 160   1        
 161   1        lcd18_setAddressRect(0,0,LCD18_W-1,LCD18_H-1);
 162   1        for(i=0;i<LCD18_H;i++)//逐行清除
 163   1        {
 164   2          for(j=0;j<LCD18_W;j++)
 165   2          {
 166   3            lcd18_writeInt16(bgColor,LCD18_DAT);
 167   3          }
 168   2        }
 169   1      }
 170          
 171          void lcd18_drawPoint(u16 x,u16 y)
 172          {
 173   1        lcd18_setAddressRect(x,y,x,y);
 174   1        lcd18_writeInt16(pColor,LCD18_DAT);
 175   1      }
 176          
 177          void lcd18_beginFill(u16 color,bool lineless)
 178          {
 179   1        fColor=color;
C51 COMPILER V9.01   LCD1_8                                                                07/09/2017 16:14:44 PAGE 4   

 180   1        beginFill=true;
 181   1        lineLess=lineless;//是否有边框
 182   1      }
 183          
 184          void lcd18_endFill(void)
 185          {
 186   1        beginFill=false;
 187   1        lineLess=false;
 188   1      }
 189          
 190          void lcd18_drawLine(u16 x0,u16 y0,u16 x1,u16 y1)
 191          {
 192   1        int xinc,yinc;//x,y增量
 193   1        int dltx,dlty;//在x,y轴上的投影长度
 194   1        int i,j;
 195   1        int x,y;//起点（坐标）
 196   1        int incCycle;//表示x或y每格多少个自变量增加(xinc或yinc)
 197   1        int tmp;
 198   1        
 199   1        if(x0==x1)//垂直线
 200   1        {
 201   2          if(y0>y1)
 202   2          {
 203   3            tmp=y1;
 204   3            y1=y0;
 205   3            y0=tmp;
 206   3          }
 207   2          lcd18_setAddressRect(x0,y0,x0,y1);
 208   2          y1-=y0-1;//y1:线长
 209   2          for(i=y1;i>0;i--) lcd18_writeInt16(pColor,LCD18_DAT);
 210   2          return;
 211   2        }else if(y0==y1)//水平线
 212   1        {
 213   2          if(x0>x1)
 214   2          {
 215   3            tmp=x1;
 216   3            x1=x0;
 217   3            x0=tmp;
 218   3          }
 219   2          lcd18_setAddressRect(x0,y0,x1,y0);
 220   2          x1-=x0-1;//x1:线长
 221   2          for(i=x1;i>0;i--) lcd18_writeInt16(pColor,LCD18_DAT);
 222   2          return;
 223   2        }
 224   1        
 225   1        if(x1>x0)
 226   1        {
 227   2          dltx=x1-x0;
 228   2          x=x0;
 229   2          xinc=1;
 230   2        }
 231   1        else
 232   1        {
 233   2          dltx=x0-x1;
 234   2          x=x1;
 235   2          xinc=-1;
 236   2        }
 237   1        
 238   1        if(y1>y0)
 239   1        {
 240   2          dlty=y1-y0;
 241   2          y=y0;
C51 COMPILER V9.01   LCD1_8                                                                07/09/2017 16:14:44 PAGE 5   

 242   2          yinc=1;
 243   2        }
 244   1        else
 245   1        {
 246   2          dlty=y0-y1;
 247   2          y=y1;
 248   2          yinc=-1;
 249   2        }
 250   1        
 251   1        if(dltx>dlty)
 252   1        {
 253   2          incCycle=dltx/dlty;
 254   2          j=0;
 255   2          for(i=0;i<dltx;i++)
 256   2          {
 257   3            x++;
 258   3            if(j<incCycle)
 259   3            {
 260   4              j++;
 261   4            }
 262   3            else
 263   3            {
 264   4              j=0;
 265   4              y+=yinc;
 266   4            }
 267   3            lcd18_drawPoint(x,y);
 268   3          }
 269   2        }
 270   1        else
 271   1        {
 272   2          incCycle=dlty/dltx;
 273   2          j=0;
 274   2          for(i=0;i<dlty;i++)
 275   2          {
 276   3            y++;
 277   3            if(j<incCycle)
 278   3            {
 279   4              j++;
 280   4            }
 281   3            else
 282   3            {
 283   4              j=0;
 284   4              x+=xinc;
 285   4            }
 286   3            lcd18_drawPoint(x,y);
 287   3          }
 288   2        }
 289   1      }
 290          
 291          void lcd18_moveTo(u16 x,u16 y)
 292          {
 293   1        px=x;
 294   1        py=y;
 295   1      }
 296          
 297          void lcd18_lineTo(u16 x,u16 y)
 298          {
 299   1        lcd18_drawLine(px,py,x,y);
 300   1        px=x;
 301   1        py=y;
 302   1      }
 303          
C51 COMPILER V9.01   LCD1_8                                                                07/09/2017 16:14:44 PAGE 6   

 304          void lcd18_drawRect(u16 left,u16 top,u16 width,u16 height)
 305          {
 306   1        u8 i,j;
 307   1        
 308   1        px=left;
 309   1        py=top;
 310   1        
 311   1        width--;
 312   1        height--;
 313   1        
 314   1        if (!lineLess)
 315   1        {
 316   2          lcd18_lineTo(left,top+height);
 317   2          lcd18_lineTo(left+width,top+height);
 318   2          lcd18_lineTo(left+width,top);
 319   2          lcd18_lineTo(left,top);
 320   2          
 321   2          left++;
 322   2          top++;
 323   2          width--;
 324   2          height--;
 325   2        }
 326   1        
 327   1        if(beginFill)
 328   1        {
 329   2          lcd18_setAddressRect(left,top,left+width-1,top+height-1);
 330   2          for(i=height;i>0;i--)
 331   2          {
 332   3            for(j=width;j>0;j--)
 333   3            {
 334   4              lcd18_writeInt16(fColor,LCD18_DAT);
 335   4            }
 336   3          }
 337   2        }
 338   1      }
 339          
 340          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1601    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      56
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       3
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
