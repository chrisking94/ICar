C51 COMPILER V9.01   LCD1_8_TEXTFIELD                                                      07/09/2017 16:12:45 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD1_8_TEXTFIELD
OBJECT MODULE PLACED IN .\DebugRel\LCD1.8_TextField.obj
COMPILER INVOKED BY: H:\mpro\MCU\Keil\C51\BIN\C51.EXE LCD1.8_TextField.c OMF2 BROWSE DEBUG TABS(2) OBJECT(.\DebugRel\LCD
                    -1.8_TextField.obj)

line level    source

   1          #include "lcd1.8.h"
   2          
   3          #ifdef COMPILE_LCD18_
   4          
   5          /*ÎÄ±¾Óò*/
   6          
   7          TextField* p_tf;
   8          
   9          void lcd18_initTextField(TextField* pTextField)
  10          {
  11   1        pTextField->charsPerRow=pTextField->width/pTextField->font->width;
  12   1        pTextField->charsPerColumn=pTextField->height/pTextField->font->height;
  13   1      }
  14          
  15          void lcd18_setTextField(TextField* pTxtField)
  16          {
  17   1        p_tf=pTxtField;
  18   1      }
  19          
  20          void lcd18_clrTextField(void)
  21          {
  22   1        lcd18_beginFill(p_tf->backColor,true);
  23   1        lcd18_drawRect(p_tf->x,p_tf->y,p_tf->width,p_tf->height);
  24   1        lcd18_endFill();
  25   1        p_tf->charx=0;
  26   1        p_tf->chary=0;
  27   1      }
  28          
  29          void lcd18_drawChr(const uchar* chGraphics)
  30          {
  31   1        u8 i,j;
  32   1        u16 tmpC;
  33   1        uchar row;
  34   1        u8 x,y;
  35   1        
  36   1        x=p_tf->x+p_tf->charx*p_tf->font->width;
  37   1        y=p_tf->y+p_tf->chary*p_tf->font->height;
  38   1        lcd18_setAddressRect(x,y,x+p_tf->font->width-1,y+p_tf->font->height-1);
  39   1        
  40   1        for(i=0;i<p_tf->font->height;i++)//ÖðÐÐ
  41   1        {
  42   2          row=chGraphics[i];//asc2_1206[33][i];
  43   2          for(j=0;j<p_tf->font->width;j++)
  44   2          {
  45   3            if(row&0x80>>j)//Ë³ÏòÑôÂë
  46   3            {
  47   4              tmpC=p_tf->foreColor;
  48   4            }
  49   3            else
  50   3            {
  51   4              tmpC=p_tf->backColor;
  52   4            }
  53   3            lcd18_writeInt16(tmpC,LCD18_DAT);
  54   3          }
C51 COMPILER V9.01   LCD1_8_TEXTFIELD                                                      07/09/2017 16:12:45 PAGE 2   

  55   2        }
  56   1        
  57   1        if(p_tf->charx==p_tf->charsPerRow-1)
  58   1        {
  59   2          p_tf->charx=0;
  60   2          p_tf->chary++;
  61   2        }
  62   1        else
  63   1        {
  64   2          p_tf->charx++;
  65   2        }
  66   1        
  67   1        if(p_tf->chary==p_tf->charsPerColumn)
  68   1        {
  69   2          p_tf->chary=0;
  70   2        }
  71   1      }
  72          
  73          void lcd18_printChr(char chr)
  74          {
  75   1        static u16 SBC_H=0;//È«½Ç·û¸ßÎ»
  76   1        u8 i;
  77   1        if(chr=='\n')
  78   1        {
  79   2          if (p_tf->chary==p_tf->charsPerColumn-1)
  80   2          {
  81   3            //ÇåÐÐ
  82   3            //for (i=p_tf->charx;i<p_tf->charsPerRow;i++)
  83   3            //{
  84   3            //  lcd18_printChr(' ');
  85   3            //}
  86   3            p_tf->chary=0;//»Øµ½¶¥¶Ë
  87   3            p_tf->foreColor=~p_tf->foreColor;//·´É«
  88   3            p_tf->backColor=~p_tf->backColor;//·´É«
  89   3          }
  90   2          else
  91   2          {
  92   3            //ÇåÐÐ
  93   3            //for (i=p_tf->charx;i<p_tf->charsPerRow;i++)
  94   3            //{
  95   3            //  lcd18_printChr(' ');
  96   3            //}
  97   3            p_tf->chary++;
  98   3          }
  99   2          p_tf->charx=0;
 100   2          return;
 101   2        }
 102   1        
 103   1        if(chr>127&&SBC_H==0)//£¨È«½Ç£©ºº×Ö
 104   1        {
 105   2          SBC_H=chr;
 106   2          SBC_H<<=8;
 107   2          if (p_tf->charx==p_tf->charsPerRow-2)
 108   2          {
 109   3            p_tf->charx=0;
 110   3            if (p_tf->chary==p_tf->charsPerColumn-1)
 111   3            {
 112   4              p_tf->chary=0;
 113   4              p_tf->foreColor=~p_tf->foreColor;//·´É«
 114   4              p_tf->backColor=~p_tf->backColor;//·´É«
 115   4            }
 116   3            else
C51 COMPILER V9.01   LCD1_8_TEXTFIELD                                                      07/09/2017 16:12:45 PAGE 3   

 117   3            {
 118   4              p_tf->chary++;
 119   4            }
 120   3          }
 121   2        }
 122   1        else
 123   1        {
 124   2          if(SBC_H!=0)//ºº×Ö
 125   2          {
 126   3            SBC_H|=chr;//µÍÎ»Ð´Èë
 127   3            SBC_H=getChinese(SBC_H);
 128   3            SBC_H*=p_tf->font->height;
 129   3            lcd18_drawChr(&p_tf->font->Graphics[SBC_H]);
 130   3            SBC_H+=p_tf->font->height;
 131   3          }
 132   2          else
 133   2          {
 134   3            SBC_H=(chr-p_tf->font->offset)*p_tf->font->height;//¼ÆËã×Ö·ûÔÚ×ª»»ºóµÄÒ»Î¬Êý×é£¨×ª»»×Ô¶þÎ¬Êý×é£©ÖÐµÄÎ»Ö
             -Ã
 135   3          }
 136   2          
 137   2          lcd18_drawChr(&p_tf->font->Graphics[SBC_H]);
 138   2          
 139   2          SBC_H=0;//»Ö¸´Îª0
 140   2        }
 141   1      }
*** WARNING C280 IN LINE 76 OF LCD1.8_TEXTFIELD.C: 'i': unreferenced local variable
 142          
 143          void lcd18_printStr(char* str)
 144          {
 145   1        while(*str)
 146   1        {
 147   2          lcd18_printChr(*str++);
 148   2        }
 149   1      }
 150          
 151          void lcd18_printNum(int num)
 152          {
 153   1        uchar buf[10],i=0;
 154   1          if (num<0)
 155   1          {
 156   2              num=~num;
 157   2              num+=1;
 158   2              lcd18_printChr('-');
 159   2          }
 160   1          do
 161   1          {
 162   2              buf[i++]=(uchar)(num%10);
 163   2          } while (num/=10);
 164   1          while (i--)
 165   1          {
 166   2              lcd18_printChr(buf[i]+0x30);
 167   2          }
 168   1      }
 169          
 170          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1115    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.01   LCD1_8_TEXTFIELD                                                      07/09/2017 16:12:45 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
